<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/rabbit
       http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">
    <!--加载配置文件-->
    <context:property-placeholder location="classpath:rabbitmq.properties"/>

    <!-- 定义rabbitmq connectionFactory -->
    <rabbit:connection-factory id="connectionFactory" host="${rabbitmq.host}"
                               port="${rabbitmq.port}"
                               username="${rabbitmq.username}"
                               password="${rabbitmq.password}"
                               virtual-host="${rabbitmq.virtual-host}"
                               publisher-confirms="true"
                               publisher-returns="true"
    />
    <!--定义管理交换机、队列-->
    <rabbit:admin connection-factory="connectionFactory"/>
    <!--定义rabbitTemplate对象操作可以在代码中方便发送消息-->
    <rabbit:template id="rabbitTemplate" connection-factory="connectionFactory"/>

    <!--消息可靠性传递(生产端)-->

    <!--定义一个队列-->
    <rabbit:queue id="test_queue_confirm" name="test_queue_confirm"/>
    <!--定义一个交换机-->
    <rabbit:direct-exchange name="test_exchange_confirm">
        <rabbit:bindings>
            <!--绑定队列-->
            <rabbit:binding queue="test_queue_confirm" key="confirm"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <!--ttl-->
    <rabbit:queue id="test_queue_ttl" name="test_queue_ttl">
        <rabbit:queue-arguments>
            <!--设置消息队列的过期时间为10秒,注意这里要设置value的类型，否则会报错-->
            <entry key="x-message-ttl" value="100000" value-type="java.lang.Integer"/>
        </rabbit:queue-arguments>
    </rabbit:queue>
    <!--绑定ttl的队列-->
    <rabbit:topic-exchange name="test_exchange_ttl">
        <rabbit:bindings>
            <rabbit:binding pattern="ttl.#" queue="test_queue_ttl"/>
        </rabbit:bindings>
    </rabbit:topic-exchange>

    <!--DLX死信队列-->

    <!--定义正常的交换机和队列-->
    <rabbit:queue id="test_queue_normal" name="test_queue_normal">
        <rabbit:queue-arguments>
            <!--设置消息过期时间-->
            <entry key="x-message-ttl" value="10000" value-type="java.lang.Integer"/>
            <!--设置消息队列最大长度-->
            <entry key="x-max-length" value="10" value-type="java.lang.Integer"/>
            <!--绑定死信交换机-->
            <entry key="x-dead-letter-exchange" value="test_exchange_dlx"/>
            <!--发送给死信交换机的routing key-->
            <entry key="x-dead-letter-routing-key" value="dlx.hehe"/>
        </rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:topic-exchange name="test_exchange_normal">
        <rabbit:bindings>
            <rabbit:binding pattern="normal.#" queue="test_queue_normal"/>
        </rabbit:bindings>
    </rabbit:topic-exchange>

    <!--定义死信交换机和队列-->
    <rabbit:queue id="test_queue_dlx" name="test_queue_dlx"/>
    <rabbit:topic-exchange name="test_exchange_dlx">
        <rabbit:bindings>
            <rabbit:binding pattern="dlx.#" queue="test_queue_dlx"/>
        </rabbit:bindings>
    </rabbit:topic-exchange>

    <!--用死信队列和TTL实现延迟队列-->

    <!--定义正常的交换机和队列-->
    <rabbit:queue id="test_queue_order" name="test_queue_order">
        <rabbit:queue-arguments>
            <!--设置消息过期时间-->
            <entry key="x-message-ttl" value="10000" value-type="java.lang.Integer"/>
            <!--绑定死信交换机-->
            <entry key="x-dead-letter-exchange" value="exchange_order"/>
            <!--发送给死信交换机的routing key-->
            <entry key="x-dead-letter-routing-key" value="order.cancel"/>
        </rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:topic-exchange name="test_exchange_order">
        <rabbit:bindings>
            <rabbit:binding pattern="test.order.#" queue="test_queue_order"/>
        </rabbit:bindings>
    </rabbit:topic-exchange>

    <!--定义死信交换机和队列-->
    <rabbit:queue id="queue_order" name="queue_order"/>
    <rabbit:topic-exchange name="exchange_order">
        <rabbit:bindings>
            <rabbit:binding pattern="order.#" queue="queue_order"/>
        </rabbit:bindings>
    </rabbit:topic-exchange>

</beans>